security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        Lipoti\Shop\Core\Entity\User:
            algorithm: auto
        Lipoti\Shop\Core\Entity\Admin:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: Lipoti\Shop\Core\Entity\User
                property: email
        admin_user_provider:
            entity:
                class: Lipoti\Shop\Core\Entity\Admin
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin($|/)
            lazy: true
            provider: admin_user_provider
            custom_authenticator: Lipoti\Shop\Admin\Security\LoginFormAuthenticator
            remember_me:
                secret: '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true
            logout:
                path: admin_logout
        main:
            pattern: ^/
            lazy: true
            provider: app_user_provider
            custom_authenticator: Lipoti\Shop\User\Security\LoginFormAuthenticator
#            user_checker: Lipoti\Shop\User\Security\UserChecker
            logout:
                path: app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin($|/), roles: IS_AUTHENTICATED_REMEMBERED }
        # - { path: ^/admin($|/), roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
